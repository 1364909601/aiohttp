# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  batch: true
  branches:
    include:
    - master
    - ?.?
    - refs/tags/*
pr:
  branches:
    include:
    - master
    - ?.?

stages:
- stage: prechecks
  displayName: "Pre-Checks"
  variables:
    AIOHTTP_NO_EXTENSIONS: 1
  jobs:
  - job: precheck
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true
      submodules: true

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
      displayName: 'Use Python 3.6'

    - script: |
        sudo apt-get update
        sudo apt-get install libenchant-dev
        pip install -U pip wheel
        pip install -r requirements/doc.txt -r requirements/doc-spelling.txt -r requirements/towncrier.txt -r requirements/flake.txt -r requirements/ci.txt .
      displayName: 'Install dependencies'

    - script: |
        make doc-spelling
      displayName: 'Checking docs spelling'

    - script: |
        towncrier --yes
      displayName: 'Checking towncrier fragments'

    - script: |
        flake8 aiohttp examples tests
      displayName: 'Linting source code with flake8'

    - script: |
        mypy aiohttp
      displayName: 'Linting source code with mypy'

    - script: |
        python setup.py --verbose sdist bdist_wheel
        twine check dist/*
      displayName: 'Verifying distribution package metadata'

    - script: |
        LC_ALL=C sort -c CONTRIBUTORS.txt
      displayName: 'Making sure that CONTRIBUTORS.txt remains sorted'

- stage: test
  displayName: "Run tests"
  jobs:
  - job: test
    strategy:
      matrix:
        Py35-Linux:
          python.version: '3.5'
          image: 'ubuntu-latest'
        Py36-Linux:
          python.version: '3.6'
          image: 'ubuntu-latest'
        Py37-Linux:
          python.version: '3.7'
          image: 'ubuntu-latest'
        Py36-Win64:
          python.version: '3.6'
          image: 'vs2017-win2016'
        Py37-Win64:
          python.version: '3.7'
          image: 'vs2017-win2016'
        Py36-Mac:
          python.version: '3.6'
          image: 'macOS-10.14'
        Py37-Mac:
          python.version: '3.7'
          image: 'macOS-10.14'
        PyPy3:
          python.version: 'pypy3'
          image: 'ubuntu-latest'
          AIOHTTP_NO_EXTENSIONS: 1
        Py37-Pure:
          python.version: '3.7'
          image: 'ubuntu-latest'
          AIOHTTP_NO_EXTENSIONS: 1

    pool:
      vmImage: $[ variables['image'] ]

    timeoutInMinutes: 15

    steps:
    - checkout: self
      clean: true
      submodules: true

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        make cythonize
      displayName: 'Install prerequirements'

    - script: |
        pip install -r requirements/ci.txt pytest-azurepipelines
        pip install .
      displayName: 'Install dependencies'

    - script: |
        pytest -c pytest.ci.ini --color=yes -s -v --cov=aiohttp --cov-report=html tests
      displayName: 'Test'

    - script: |
        pip install codecov
        python -m codecov -f coverage.xml -X gcov
      displayName: 'Upload coverage reports'
